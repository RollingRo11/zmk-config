/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        leftbootloader {
            bindings = <&bootloader>;
            key-positions = <0 24 25 1>;
        };

        leftsysreset {
            bindings = <&sys_reset>;
            key-positions = <2 26 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q      &kp W  &kp E  &kp R      &kp T       &kp Y    &kp U          &kp I  &kp O      &kp P       &kp RIGHT_ALT
&kp LALT   &kp A      &kp S  &kp D  &kp F      &kp G       &kp H    &kp J          &kp K  &kp L      &kp SEMI    &kp SQT
&kp LSHFT  &kp LCTRL  &kp Z  &kp X  &kp C      &kp V       &kp B    &kp N          &kp M  &kp COMMA  &kp PERIOD  &kp ESCAPE
                             &mo 1  &kp SPACE  &kp LGUI    &kp RET  &kp BACKSPACE  &mo 2
            >;
        };

        nav-nums {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp LG(KP_NUMBER_1)  &kp LG(KP_NUMBER_2)  &kp LG(KP_NUMBER_3)  &kp LG(KP_NUMBER_4)  &none                      &none    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LG(LS(N0))      &kp LG(LS(SLASH))
&kp TAB     &kp LEFT_ARROW       &kp DOWN_ARROW       &kp UP_ARROW         &kp RIGHT_ARROW      &none                      &none    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LG(LS(PERIOD))  &kp LG(LS(SQT))
&kp LSHFT   &kp LG(LS(H))        &kp LG(LS(J))        &kp LG(LS(K))        &kp LG(LS(L))        &kp LG(LS(KP_NUMBER_0))    &trans   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LG(LS(COMMA))   &kp LG(LS(BACKSLASH))
                                                      &trans               &trans               &kp BACKSPACE              &kp RET  &trans        &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PRCNT         &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp RIGHT_ALT
&kp TAB     &kp SLASH             &kp BACKSLASH         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp KP_MINUS      &none       &kp EQUAL         &kp POUND   &kp STAR           &kp AMPERSAND    &bootloader
&kp LSHFT   &kp PIPE              &kp EXCL              &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE    &none       &kp PLUS          &kp DOLLAR  &kp AT_SIGN        &none            &sys_reset
                                                        &kp LGUI              &trans                 &kp BACKSPACE     &kp RET     &kp SPACE         &trans
            >;
        };

        reset+boot {
            bindings = <
&sys_reset  &bootloader  &trans  &trans  &trans  &trans    &sys_reset  &bootloader  &trans  &trans  &trans  &trans
&trans      &trans       &trans  &trans  &trans  &trans    &trans      &trans       &trans  &trans  &trans  &trans
&trans      &trans       &trans  &trans  &trans  &trans    &trans      &trans       &trans  &trans  &trans  &trans
                                 &trans  &trans  &trans    &trans      &trans       &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
